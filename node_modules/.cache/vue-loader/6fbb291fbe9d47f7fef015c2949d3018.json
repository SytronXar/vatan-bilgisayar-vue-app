{"remainingRequest":"C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\src\\components\\BasketCartTableRow.vue?vue&type=template&id=1f232882&","dependencies":[{"path":"C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\src\\components\\BasketCartTableRow.vue","mtime":1604927910772},{"path":"C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604927871814},{"path":"C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1604927908700},{"path":"C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604927871814},{"path":"C:\\Users\\Slyleight\\Desktop\\another-one-vatan\\node_modules\\vue-loader\\lib\\index.js","mtime":1604927908697}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}