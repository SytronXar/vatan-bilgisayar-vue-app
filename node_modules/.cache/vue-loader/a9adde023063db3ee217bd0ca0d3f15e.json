{"remainingRequest":"C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\src\\components\\TheFancyBoxContainer.vue?vue&type=template&id=ebc215c4&","dependencies":[{"path":"C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\src\\components\\TheFancyBoxContainer.vue","mtime":1604839436368},{"path":"C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604668081097},{"path":"C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1604668125019},{"path":"C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604668081097},{"path":"C:\\Users\\Slyleight\\Desktop\\Vatan-vue-vue-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1604668125011}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYKICBjbGFzcz0iZmFuY3lib3gtY29udGFpbmVyIGZhbmN5Ym94LWlzLW9wZW4gZmFuY3lib3gtY2FuLXN3aXBlIgogIHJvbGU9ImRpYWxvZyIKICB0YWJpbmRleD0iLTEiCiAgaWQ9ImZhbmN5Ym94LWNvbnRhaW5lci0yIgogIHN0eWxlPSJ0cmFuc2l0aW9uLWR1cmF0aW9uOiAzNjZtczsiCj4KICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1iZyI+PC9kaXY+CiAgPGRpdiBjbGFzcz0iZmFuY3lib3gtaW5uZXIiPgogICAgPGRpdiBjbGFzcz0iZmFuY3lib3gtaW5mb2JhciI+CiAgICAgIDxzcGFuIGRhdGEtZmFuY3lib3gtaW5kZXg9IiI+MTwvc3Bhbj4mbmJzcDsvJm5ic3A7PHNwYW4KICAgICAgICBkYXRhLWZhbmN5Ym94LWNvdW50PSIiCiAgICAgICAgPjE8L3NwYW4KICAgICAgPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC10b29sYmFyIj4KICAgICAgPGJ1dHRvbgogICAgICAgIGRhdGEtZmFuY3lib3gtem9vbT0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS16b29tIgogICAgICAgIHRpdGxlPSJab29tIgogICAgICAgIGRpc2FibGVkPSIiCiAgICAgID4KICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDI0IDI0Ij4KICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgIGQ9Ik0xOC43IDE3LjNsLTMtM2E1LjkgNS45IDAgMCAwLS42LTcuNiA1LjkgNS45IDAgMCAwLTguNCAwIDUuOSA1LjkgMCAwIDAgMCA4LjQgNS45IDUuOSAwIDAgMCA3LjcuN2wzIDNhMSAxIDAgMCAwIDEuMyAwYy40LS41LjQtMSAwLTEuNXpNOC4xIDEzLjhhNCA0IDAgMCAxIDAtNS43IDQgNCAwIDAgMSA1LjcgMCA0IDQgMCAwIDEgMCA1LjcgNCA0IDAgMCAxLTUuNyAweiIKICAgICAgICAgID48L3BhdGg+CiAgICAgICAgPC9zdmc+PC9idXR0b24KICAgICAgPjxidXR0b24KICAgICAgICBkYXRhLWZhbmN5Ym94LXBsYXk9IiIKICAgICAgICBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tcGxheSIKICAgICAgICB0aXRsZT0iU3RhcnQgc2xpZGVzaG93IgogICAgICAgIHN0eWxlPSJkaXNwbGF5OiBub25lOyIKICAgICAgPgogICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgPHBhdGggZD0iTTYuNSA1LjR2MTMuMmwxMS02LjZ6Ij48L3BhdGg+PC9zdmcKICAgICAgICA+PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+CiAgICAgICAgICA8cGF0aAogICAgICAgICAgICBkPSJNOC4zMyA1Ljc1aDIuMnYxMi41aC0yLjJWNS43NXptNS4xNSAwaDIuMnYxMi41aC0yLjJWNS43NXoiCiAgICAgICAgICA+PC9wYXRoPgogICAgICAgIDwvc3ZnPjwvYnV0dG9uCiAgICAgID48YnV0dG9uCiAgICAgICAgZGF0YS1mYW5jeWJveC10aHVtYnM9IiIKICAgICAgICBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tdGh1bWJzIgogICAgICAgIHRpdGxlPSJUaHVtYm5haWxzIgogICAgICAgIHN0eWxlPSJkaXNwbGF5OiBub25lOyIKICAgICAgPgogICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgPHBhdGgKICAgICAgICAgICAgZD0iTTE0LjU5IDE0LjU5aDMuNzZ2My43NmgtMy43NnYtMy43NnptLTQuNDcgMGgzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjV2LTMuNzZ6bTguOTQtNC40N2gzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2di0zLjc2em0tNC40NyAwaDMuNzZ2My43Nkg1LjY1di0zLjc2em04Ljk0LTQuNDdoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjVWNS42NXoiCiAgICAgICAgICA+PC9wYXRoPgogICAgICAgIDwvc3ZnPjwvYnV0dG9uCiAgICAgID48YnV0dG9uCiAgICAgICAgZGF0YS1mYW5jeWJveC1jbG9zZT0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1jbG9zZSIKICAgICAgICB0aXRsZT0iQ2xvc2UiCiAgICAgID4KICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDI0IDI0Ij4KICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgIGQ9Ik0xMiAxMC42TDYuNiA1LjIgNS4yIDYuNmw1LjQgNS40LTUuNCA1LjQgMS40IDEuNCA1LjQtNS40IDUuNCA1LjQgMS40LTEuNC01LjQtNS40IDUuNC01LjQtMS40LTEuNC01LjQgNS40eiIKICAgICAgICAgID48L3BhdGg+CiAgICAgICAgPC9zdmc+CiAgICAgIDwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1uYXZpZ2F0aW9uIj4KICAgICAgPGJ1dHRvbgogICAgICAgIGRhdGEtZmFuY3lib3gtcHJldj0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19sZWZ0IgogICAgICAgIHRpdGxlPSJQcmV2aW91cyIKICAgICAgICBkaXNhYmxlZD0iIgogICAgICA+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgIGQ9Ik0xMS4yOCAxNS43bC0xLjM0IDEuMzdMNSAxMmw0Ljk0LTUuMDcgMS4zNCAxLjM4LTIuNjggMi43MkgxOXYxLjk0SDguNnoiCiAgICAgICAgICAgID48L3BhdGg+CiAgICAgICAgICA8L3N2Zz4KICAgICAgICA8L2Rpdj48L2J1dHRvbgogICAgICA+PGJ1dHRvbgogICAgICAgIGRhdGEtZmFuY3lib3gtbmV4dD0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19yaWdodCIKICAgICAgICB0aXRsZT0iTmV4dCIKICAgICAgICBkaXNhYmxlZD0iIgogICAgICA+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgIGQ9Ik0xNS40IDEyLjk3bC0yLjY4IDIuNzIgMS4zNCAxLjM4TDE5IDEybC00Ljk0LTUuMDctMS4zNCAxLjM4IDIuNjggMi43Mkg1djEuOTR6IgogICAgICAgICAgICA+PC9wYXRoPgogICAgICAgICAgPC9zdmc+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1zdGFnZSI+CiAgICAgIDxkaXYKICAgICAgICBjbGFzcz0iZmFuY3lib3gtc2xpZGUgZmFuY3lib3gtc2xpZGUtLWh0bWwgZmFuY3lib3gtc2xpZGUtLWN1cnJlbnQgZmFuY3lib3gtc2xpZGUtLWNvbXBsZXRlIgogICAgICAgIHN0eWxlPSIiCiAgICAgID4KICAgICAgICA8ZGl2CiAgICAgICAgICBjbGFzcz0iZmFuY3ktbW9kYWwgZmFuY3ktbW9kYWwtYWRkIGZhbmN5Ym94LWNvbnRlbnQiCiAgICAgICAgICBpZD0ibW9kYWwtYmFza2V0IgogICAgICAgICAgc3R5bGU9ImRpc3BsYXk6IGlubGluZS1ibG9jazsiCiAgICAgICAgPgogICAgICAgICAgPGRpdiBjbGFzcz0iZmFuY3ktbW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIG0tYi0wIG1lc3NhZ2UtbW9kYWwiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWNoZWNrIHJvdW5kIj48L3NwYW4KICAgICAgICAgICAgICA+PHNwYW4gc3R5bGU9ImNvbG9yOmdyZWVuOyI+w5xyw7xuIEVrbGVuZGkuPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1jZWxsIGNvbC1zbS0xIGNvbC14cy0zIHNob3J0LWltYWdlIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiPgogICAgICAgICAgICAgICAgPHBpY3R1cmU+CiAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICA6c3JjPSJwcm9kdWN0LmltYWdlc1swXSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiCiAgICAgICAgICAgICAgICAgICAgOmFsdD0icHJvZHVjdC5uYW1lIgogICAgICAgICAgICAgICAgICAgIDp0aXRsZT0icHJvZHVjdC5uYW1lIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9waWN0dXJlPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCBjb2wtc20tNSBjb2wteHMtNSBzaG9ydC1uYW1lIj4KICAgICAgICAgICAgICA8cm91dGVyLWxpbmsKICAgICAgICAgICAgICAgIDp0bz0iewogICAgICAgICAgICAgICAgICBuYW1lOiAnUHJvZHVjdFBhZ2UnLAogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SWQ6IHByb2R1Y3QuaWQsCiAgICAgICAgICAgICAgICAgICAgcHJvZHVjdGhyZWY6IFByb2R1Y3RIcmVmCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHNwYW4+IHt7IHByb2R1Y3QubmFtZSB9fSA8L3NwYW4+CiAgICAgICAgICAgICAgPC9yb3V0ZXItbGluaz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCBjb2wteHMtMyBzaG9ydC1wcmljZSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2R1Y3QtbGlzdF9fcHJpY2UiPnt7CiAgICAgICAgICAgICAgICBmb3JtYXRQcmljZShwcm9kdWN0LmNvc3QpCiAgICAgICAgICAgICAgfX08L3NwYW4+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2R1Y3QtbGlzdF9fY3VycmVuY3kiPlRMPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZmFuY3ktbW9kYWwtYm9keSBmYW5jeS1tb2RhbC1saXN0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4KICAgICAgICAgICAgICAgICAgPGg0PkJVTkRMRSDDnFLDnE5MRVI8L2g0PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIiPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgaWQ9InBvcHVwQnVuZGxlTGlzdCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0ib3dsLW1vZGFsLXNsaWRlci1idW5kbGUgb3dsLWNhcm91c2VsIG93bC10aGVtZSBvd2wtbG9hZGVkIG93bC1kcmFnIgogICAgICAgICAgICAgICAgICAgIGRhdGEtcHJvZHVjdGxpbmVpZD0iMCIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im93bC1zdGFnZS1vdXRlciI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvd2wtc3RhZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0yOTVweCwgMHB4LCAwcHgpOyB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZSAwczsgd2lkdGg6IDExODJweDsiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ib3dsLWl0ZW0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyODkuMzMzcHg7IG1hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0iIGlkPSI4OTMwOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb3N0LXBvcHVsYXItZmFuY3kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Im1jYWZlZS1pbnRlcm5ldC1zZWN1cml0eS0zLWNpaGF6LXR1bS1wbGF0Zm9ybWxhci5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtb3N0LXBvcHVsYXItdGFibGUgZC10YWJsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGljdHVyZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9jZG4udmF0YW5iaWxnaXNheWFyLmNvbS9VcGxvYWQvUHJvZHVjdC9tY2FmZWUvdGh1bWIvVGVvcmlWMi04OTMwOC0yX3NtYWxsLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PSJtY2FmZWUtaW50ZXJuZXQtc2VjdXJpdHktMy1jaWhhei10dW0tcGxhdGZvcm1sYXIuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0ibWNhZmVlLWludGVybmV0LXNlY3VyaXR5LTMtY2loYXotdHVtLXBsYXRmb3JtbGFyLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaS10aXRsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPk1jQWZlZSBJbnRlcm5ldCBTZWN1cml0eSAzIENpaGF6L1TDvG0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhdGZvcm1sYXI8L3NwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2xkLXByaWNlIj4yMDAgVEw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4xNTkgPHNwYW4+VEw8L3NwYW4+PC9zcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPiA8L2EKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9IkFkZEJ1bmRsZUZyb21Qb3BVcCg4OTMwOCwgMCwgMCwxMDM4ODgsMTU5LCdNSVMwMDROUjNSQUEnKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5IRU1FTiBFS0xFPC9hCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvd2wtaXRlbSBhY3RpdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyODkuMzMzcHg7IG1hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0iIGlkPSIxMDQzNzYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9zdC1wb3B1bGFyLWZhbmN5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJhcHBsZS1td3Z1MnptLWEtaXBob25lLTExLXNpbGlrb24ta2lsaWYtc2l5YWguaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibW9zdC1wb3B1bGFyLXRhYmxlIGQtdGFibGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vY2RuLnZhdGFuYmlsZ2lzYXlhci5jb20vVXBsb2FkL1Byb2R1Y3QvYXBwbGUvdGh1bWIvVGVvcmlWMi0xMDQzNzZfc21hbGwuanBnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImFwcGxlLW13dnUyem0tYS1pcGhvbmUtMTEtc2lsaWtvbi1raWxpZi1zaXlhaC5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJhcHBsZS1td3Z1MnptLWEtaXBob25lLTExLXNpbGlrb24ta2lsaWYtc2l5YWguaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGljdHVyZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZC1jZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpLXRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+QVBQTEUgTVdWVTJaTS9BIMSwUEhPTkUgMTEgU8SwTMSwS09OIEtJTElGIC0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8SwWUFIPC9zcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9sZC1wcmljZSI+Mzk5IFRMPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByaWNlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+MzU5IDxzcGFuPlRMPC9zcGFuPjwvc3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4gPC9hCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrPSJBZGRCdW5kbGVGcm9tUG9wVXAoMTA0Mzc2LCAwLCAwLDEwMzg4OCwzNTksJ01XVlUyWk0vQScpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkhFTUVOIEVLTEU8L2EKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im93bC1pdGVtIGFjdGl2ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDI4OS4zMzNweDsgbWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSIgaWQ9IjEwNTM0NCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb3N0LXBvcHVsYXItZmFuY3kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9ImFkZGlzb24taXAtMTFzLWlwaG9uZS0xMS11bHRyYS1zbGltLXRlbGVmb24ta2lsaWZpLXNpeWFoLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1vc3QtcG9wdWxhci10YWJsZSBkLXRhYmxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1jZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwaWN0dXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2Nkbi52YXRhbmJpbGdpc2F5YXIuY29tL1VwbG9hZC9Qcm9kdWN0L2FkZGlzb24vdGh1bWIvVGVvcmlWMi0xMDUzNDRfc21hbGwuanBnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImFkZGlzb24taXAtMTFzLWlwaG9uZS0xMS11bHRyYS1zbGltLXRlbGVmb24ta2lsaWZpLXNpeWFoLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9ImFkZGlzb24taXAtMTFzLWlwaG9uZS0xMS11bHRyYS1zbGltLXRlbGVmb24ta2lsaWZpLXNpeWFoLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaS10aXRsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkFERMSwU09OIElQLTExUyDEsFBIT05FIDExIFVMVFJBIFNMxLBNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRFTEVGT04gS0lMSUZJLSBTxLBZQUg8L3NwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2xkLXByaWNlIj44MiBUTDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjczIDxzcGFuPlRMPC9zcGFuPjwvc3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4gPC9hCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrPSJBZGRCdW5kbGVGcm9tUG9wVXAoMTA1MzQ0LCAwLCAwLDEwMzg4OCw3MywnSVAtMTFTIFNpeWFoJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+SEVNRU4gRUtMRTwvYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ib3dsLWl0ZW0gYWN0aXZlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjg5LjMzM3B4OyBtYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIiBpZD0iMTA4MDQ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vc3QtcG9wdWxhci1mYW5jeSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0idHRlYy1haXJnbGFzcy1lZGdlY29sb3ItaXBob25lLTExLWNhbS1la3Jhbi1rb3J1eXVjdS5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtb3N0LXBvcHVsYXItdGFibGUgZC10YWJsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGljdHVyZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9jZG4udmF0YW5iaWxnaXNheWFyLmNvbS9VcGxvYWQvUHJvZHVjdC90dGVjL3RodW1iL1Rlb3JpVjItMTA4MDQ5X3NtYWxsLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PSJ0dGVjLWFpcmdsYXNzLWVkZ2Vjb2xvci1pcGhvbmUtMTEtY2FtLWVrcmFuLWtvcnV5dWN1Lmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9InR0ZWMtYWlyZ2xhc3MtZWRnZWNvbG9yLWlwaG9uZS0xMS1jYW0tZWtyYW4ta29ydXl1Y3UuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGljdHVyZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZC1jZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpLXRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+VFRFQyBBSVJHTEFTUyBFREdFQ09MT1IgSVBIT05FIDExIENBTQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFS1JBTiBLT1JVWVVDVTwvc3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZC1jZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvbGQtcHJpY2UiPjE0OSBUTDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjEzNCA8c3Bhbj5UTDwvc3Bhbj48L3NwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+IDwvYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0iQWRkQnVuZGxlRnJvbVBvcFVwKDEwODA0OSwgMCwgMCwxMDM4ODgsMTM0LCcyRUNSNDUnKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5IRU1FTiBFS0xFPC9hCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im93bC1uYXYiPgogICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGU9InByZXNlbnRhdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im93bC1wcmV2IgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4tY2Fyb3VzZWwtY29udHJvbHMgaWNvbi1hbmdsZS1sZWZ0IgogICAgICAgICAgICAgICAgICAgICAgICA+PC9zcGFuPjwvYnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICA+PGJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGU9InByZXNlbnRhdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im93bC1uZXh0IGRpc2FibGVkIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4tY2Fyb3VzZWwtY29udHJvbHMgaWNvbi1hbmdsZS1yaWdodCIKICAgICAgICAgICAgICAgICAgICAgICAgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im93bC1kb3RzIj4KICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gcm9sZT0iYnV0dG9uIiBjbGFzcz0ib3dsLWRvdCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjwvc3Bhbj48L2J1dHRvbgogICAgICAgICAgICAgICAgICAgICAgPjxidXR0b24gcm9sZT0iYnV0dG9uIiBjbGFzcz0ib3dsLWRvdCBhY3RpdmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJmYW5jeS1tb2RhbC1mb290ZXIgZmFuY3ktbW9kYWwtbGlzdCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiB0ZXh0LXJpZ2h0Ij48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiB0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iLyIgY2xhc3M9ImdvLWJhY2siPkFsxLHFn3ZlcmnFn2UgR2VyaSBEw7ZuPC9hPgogICAgICAgICAgICAgICAgICA8Zm9ybQogICAgICAgICAgICAgICAgICAgIGFjdGlvbj0iL0Jhc2tldC9Ub0ZpcnN0U3RlcCIKICAgICAgICAgICAgICAgICAgICBtZXRob2Q9InBvc3QiCiAgICAgICAgICAgICAgICAgICAgcm9sZT0iZm9ybSIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgbmFtZT0iX19SZXF1ZXN0VmVyaWZpY2F0aW9uVG9rZW4iCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJoaWRkZW4iCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iWnlvWWZaVlppTlR2TXUwMVVXSkdRYmc0OG9rcHFfY0x5S0hFOUJuMnp2RWVZbGlScENiZVMzVXlaZEJWOE9WM2hNVXNCczdiNXR0WEQ0VG9ibWdMaURLWnJSODEiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImhpZGRlbiIKICAgICAgICAgICAgICAgICAgICAgIGlkPSJjdXJyZW50IgogICAgICAgICAgICAgICAgICAgICAgbmFtZT0iY3VycmVudCIKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSIwIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1kYXJrLWJsdWUgZ29Ub0Jhc2tldCIKICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InN1Ym1pdCIKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSJTRVBFVEUgR8SwVCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgZGF0YS1mYW5jeWJveC1jbG9zZT0iIgogICAgICAgICAgICBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWNsb3NlLXNtYWxsIgogICAgICAgICAgICB0aXRsZT0iQ2xvc2UiCiAgICAgICAgICAgIEBjbGljaz0iJGVtaXQoJ3Nob3ctdGltZScsc2hvdykiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxzdmcKICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgdmVyc2lvbj0iMSIKICAgICAgICAgICAgICB2aWV3Qm94PSIwIDAgMjQgMjQiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgZD0iTTEzIDEybDUtNS0xLTEtNSA1LTUtNS0xIDEgNSA1LTUgNSAxIDEgNS01IDUgNSAxLTF6IgogICAgICAgICAgICAgID48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1jYXB0aW9uIGZhbmN5Ym94LWNhcHRpb24tLXNlcGFyYXRlIj4KICAgICAgPGRpdiBjbGFzcz0iZmFuY3lib3gtY2FwdGlvbl9fYm9keSI+PC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cg=="},null]}