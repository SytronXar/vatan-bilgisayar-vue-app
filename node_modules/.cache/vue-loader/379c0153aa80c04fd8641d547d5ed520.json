{"remainingRequest":"C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\src\\components\\TheWrapper.vue?vue&type=template&id=5347f7dc&scoped=true&","dependencies":[{"path":"C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\src\\components\\TheWrapper.vue","mtime":1604483216065},{"path":"C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604478381099},{"path":"C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1604478414890},{"path":"C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604478381099},{"path":"C:\\Users\\Slyleight\\Desktop\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1604478414887}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}