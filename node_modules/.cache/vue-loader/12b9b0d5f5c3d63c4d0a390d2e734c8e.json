{"remainingRequest":"E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\src\\components\\TheWrapper.vue?vue&type=template&id=5347f7dc&scoped=true&","dependencies":[{"path":"E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\src\\components\\TheWrapper.vue","mtime":1604337725921},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\VatanBilgisayarVueApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}