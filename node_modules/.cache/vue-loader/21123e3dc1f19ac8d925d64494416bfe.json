{"remainingRequest":"E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\src\\components\\TheFancyBoxContainer.vue?vue&type=template&id=ebc215c4&","dependencies":[{"path":"E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\src\\components\\TheFancyBoxContainer.vue","mtime":1604748960697},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604495126881},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1604495239772},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604495126881},{"path":"E:\\Ders\\Vue\\VatanVueWeb\\vatanbilgisayarvueapp\\vatan-bilgisayar-vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1604495239772}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYKICBjbGFzcz0iZmFuY3lib3gtY29udGFpbmVyIGZhbmN5Ym94LWlzLW9wZW4gZmFuY3lib3gtY2FuLXN3aXBlIgogIHJvbGU9ImRpYWxvZyIKICB0YWJpbmRleD0iLTEiCiAgaWQ9ImZhbmN5Ym94LWNvbnRhaW5lci0yIgogIHN0eWxlPSJ0cmFuc2l0aW9uLWR1cmF0aW9uOiAzNjZtczsiCj4KICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1iZyI+PC9kaXY+CiAgPGRpdiBjbGFzcz0iZmFuY3lib3gtaW5uZXIiPgogICAgPGRpdiBjbGFzcz0iZmFuY3lib3gtaW5mb2JhciI+CiAgICAgIDxzcGFuIGRhdGEtZmFuY3lib3gtaW5kZXg9IiI+MTwvc3Bhbj4mbmJzcDsvJm5ic3A7PHNwYW4KICAgICAgICBkYXRhLWZhbmN5Ym94LWNvdW50PSIiCiAgICAgICAgPjE8L3NwYW4KICAgICAgPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC10b29sYmFyIj4KICAgICAgPGJ1dHRvbgogICAgICAgIGRhdGEtZmFuY3lib3gtem9vbT0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS16b29tIgogICAgICAgIHRpdGxlPSJab29tIgogICAgICAgIGRpc2FibGVkPSIiCiAgICAgID4KICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDI0IDI0Ij4KICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgIGQ9Ik0xOC43IDE3LjNsLTMtM2E1LjkgNS45IDAgMCAwLS42LTcuNiA1LjkgNS45IDAgMCAwLTguNCAwIDUuOSA1LjkgMCAwIDAgMCA4LjQgNS45IDUuOSAwIDAgMCA3LjcuN2wzIDNhMSAxIDAgMCAwIDEuMyAwYy40LS41LjQtMSAwLTEuNXpNOC4xIDEzLjhhNCA0IDAgMCAxIDAtNS43IDQgNCAwIDAgMSA1LjcgMCA0IDQgMCAwIDEgMCA1LjcgNCA0IDAgMCAxLTUuNyAweiIKICAgICAgICAgID48L3BhdGg+CiAgICAgICAgPC9zdmc+PC9idXR0b24KICAgICAgPjxidXR0b24KICAgICAgICBkYXRhLWZhbmN5Ym94LXBsYXk9IiIKICAgICAgICBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tcGxheSIKICAgICAgICB0aXRsZT0iU3RhcnQgc2xpZGVzaG93IgogICAgICAgIHN0eWxlPSJkaXNwbGF5OiBub25lOyIKICAgICAgPgogICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgPHBhdGggZD0iTTYuNSA1LjR2MTMuMmwxMS02LjZ6Ij48L3BhdGg+PC9zdmcKICAgICAgICA+PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+CiAgICAgICAgICA8cGF0aAogICAgICAgICAgICBkPSJNOC4zMyA1Ljc1aDIuMnYxMi41aC0yLjJWNS43NXptNS4xNSAwaDIuMnYxMi41aC0yLjJWNS43NXoiCiAgICAgICAgICA+PC9wYXRoPgogICAgICAgIDwvc3ZnPjwvYnV0dG9uCiAgICAgID48YnV0dG9uCiAgICAgICAgZGF0YS1mYW5jeWJveC10aHVtYnM9IiIKICAgICAgICBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tdGh1bWJzIgogICAgICAgIHRpdGxlPSJUaHVtYm5haWxzIgogICAgICAgIHN0eWxlPSJkaXNwbGF5OiBub25lOyIKICAgICAgPgogICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgPHBhdGgKICAgICAgICAgICAgZD0iTTE0LjU5IDE0LjU5aDMuNzZ2My43NmgtMy43NnYtMy43NnptLTQuNDcgMGgzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjV2LTMuNzZ6bTguOTQtNC40N2gzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2di0zLjc2em0tNC40NyAwaDMuNzZ2My43Nkg1LjY1di0zLjc2em04Ljk0LTQuNDdoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjVWNS42NXoiCiAgICAgICAgICA+PC9wYXRoPgogICAgICAgIDwvc3ZnPjwvYnV0dG9uCiAgICAgID48YnV0dG9uCiAgICAgICAgZGF0YS1mYW5jeWJveC1jbG9zZT0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1jbG9zZSIKICAgICAgICB0aXRsZT0iQ2xvc2UiCiAgICAgID4KICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDI0IDI0Ij4KICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgIGQ9Ik0xMiAxMC42TDYuNiA1LjIgNS4yIDYuNmw1LjQgNS40LTUuNCA1LjQgMS40IDEuNCA1LjQtNS40IDUuNCA1LjQgMS40LTEuNC01LjQtNS40IDUuNC01LjQtMS40LTEuNC01LjQgNS40eiIKICAgICAgICAgID48L3BhdGg+CiAgICAgICAgPC9zdmc+CiAgICAgIDwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1uYXZpZ2F0aW9uIj4KICAgICAgPGJ1dHRvbgogICAgICAgIGRhdGEtZmFuY3lib3gtcHJldj0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19sZWZ0IgogICAgICAgIHRpdGxlPSJQcmV2aW91cyIKICAgICAgICBkaXNhYmxlZD0iIgogICAgICA+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgIGQ9Ik0xMS4yOCAxNS43bC0xLjM0IDEuMzdMNSAxMmw0Ljk0LTUuMDcgMS4zNCAxLjM4LTIuNjggMi43MkgxOXYxLjk0SDguNnoiCiAgICAgICAgICAgID48L3BhdGg+CiAgICAgICAgICA8L3N2Zz4KICAgICAgICA8L2Rpdj48L2J1dHRvbgogICAgICA+PGJ1dHRvbgogICAgICAgIGRhdGEtZmFuY3lib3gtbmV4dD0iIgogICAgICAgIGNsYXNzPSJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19yaWdodCIKICAgICAgICB0aXRsZT0iTmV4dCIKICAgICAgICBkaXNhYmxlZD0iIgogICAgICA+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgIGQ9Ik0xNS40IDEyLjk3bC0yLjY4IDIuNzIgMS4zNCAxLjM4TDE5IDEybC00Ljk0LTUuMDctMS4zNCAxLjM4IDIuNjggMi43Mkg1djEuOTR6IgogICAgICAgICAgICA+PC9wYXRoPgogICAgICAgICAgPC9zdmc+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmYW5jeWJveC1zdGFnZSI+CiAgICAgIDxkaXYKICAgICAgICBjbGFzcz0iZmFuY3lib3gtc2xpZGUgZmFuY3lib3gtc2xpZGUtLWh0bWwgZmFuY3lib3gtc2xpZGUtLWN1cnJlbnQgZmFuY3lib3gtc2xpZGUtLWNvbXBsZXRlIgogICAgICAgIHN0eWxlPSIiCiAgICAgID4KICAgICAgICA8ZGl2CiAgICAgICAgICBjbGFzcz0iZmFuY3ktbW9kYWwgZmFuY3ktbW9kYWwtYWRkIGZhbmN5Ym94LWNvbnRlbnQiCiAgICAgICAgICBpZD0ibW9kYWwtYmFza2V0IgogICAgICAgICAgc3R5bGU9ImRpc3BsYXk6IGlubGluZS1ibG9jazsiCiAgICAgICAgPgogICAgICAgICAgPGRpdiBjbGFzcz0iZmFuY3ktbW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIG0tYi0wIG1lc3NhZ2UtbW9kYWwiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWNoZWNrIHJvdW5kIj48L3NwYW4KICAgICAgICAgICAgICA+PHNwYW4gc3R5bGU9ImNvbG9yOmdyZWVuOyI+w5xyw7xuIEVrbGVuZGkuPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1jZWxsIGNvbC1zbS0xIGNvbC14cy0zIHNob3J0LWltYWdlIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiPgogICAgICAgICAgICAgICAgPHBpY3R1cmU+CiAgICAgICAgICAgICAgICAgIDwhLS1baWYgSUUgOV0gPjwgdmlkZW8gc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij48IVtlbmRpZl0tLT4KICAgICAgICAgICAgICAgICAgPHNvdXJjZQogICAgICAgICAgICAgICAgICAgIHNyY3NldD0iaHR0cHM6Ly9jZG4udmF0YW5iaWxnaXNheWFyLmNvbS9VcGxvYWQvUFJPRFVDVC9hcHBsZS90aHVtYi9UZW9yaVYyLTEwMzg4OC0yN19zbWFsbC5qcGciCiAgICAgICAgICAgICAgICAgICAgbWVkaWE9IihtaW4td2lkdGg6IDEwMDBweCkiCiAgICAgICAgICAgICAgICAgICAgYWx0PSJpUGhvbmUgIDExIDY0IEdCIEFLSUxMSSBURUxFRk9OIFPEsFlBSCIKICAgICAgICAgICAgICAgICAgICB0aXRsZT0iaVBob25lICAxMSA2NCBHQiBBS0lMTEkgVEVMRUZPTiBTxLBZQUgiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxzb3VyY2UKICAgICAgICAgICAgICAgICAgICBzcmNzZXQ9Imh0dHBzOi8vY2RuLnZhdGFuYmlsZ2lzYXlhci5jb20vVXBsb2FkL1BST0RVQ1QvYXBwbGUvdGh1bWIvVGVvcmlWMi0xMDM4ODgtMjdfc21hbGwuanBnIgogICAgICAgICAgICAgICAgICAgIG1lZGlhPSIobWluLXdpZHRoOiA2MDBweCkiCiAgICAgICAgICAgICAgICAgICAgYWx0PSJpUGhvbmUgIDExIDY0IEdCIEFLSUxMSSBURUxFRk9OIFPEsFlBSCIKICAgICAgICAgICAgICAgICAgICB0aXRsZT0iaVBob25lICAxMSA2NCBHQiBBS0lMTEkgVEVMRUZPTiBTxLBZQUgiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxzb3VyY2UKICAgICAgICAgICAgICAgICAgICBzcmNzZXQ9Imh0dHBzOi8vY2RuLnZhdGFuYmlsZ2lzYXlhci5jb20vVXBsb2FkL1BST0RVQ1QvYXBwbGUvdGh1bWIvVGVvcmlWMi0xMDM4ODgtMjdfc21hbGwuanBnIgogICAgICAgICAgICAgICAgICAgIG1lZGlhPSIobWluLXdpZHRoOiAzMDBweCkiCiAgICAgICAgICAgICAgICAgICAgYWx0PSJpUGhvbmUgIDExIDY0IEdCIEFLSUxMSSBURUxFRk9OIFPEsFlBSCIKICAgICAgICAgICAgICAgICAgICB0aXRsZT0iaVBob25lICAxMSA2NCBHQiBBS0lMTEkgVEVMRUZPTiBTxLBZQUgiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDwhLS1baWYgSUUgOV0+PC92aWRlbz48IVtlbmRpZl0tLT4KICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9jZG4udmF0YW5iaWxnaXNheWFyLmNvbS9VcGxvYWQvUFJPRFVDVC9hcHBsZS90aHVtYi9UZW9yaVYyLTEwMzg4OC0yN19zbWFsbC5qcGciCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1yZXNwb25zaXZlIgogICAgICAgICAgICAgICAgICAgIGFsdD0iaVBob25lICAxMSA2NCBHQiBBS0lMTEkgVEVMRUZPTiBTxLBZQUgiCiAgICAgICAgICAgICAgICAgICAgdGl0bGU9ImlQaG9uZSAgMTEgNjQgR0IgQUtJTExJIFRFTEVGT04gU8SwWUFIIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9waWN0dXJlPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCBjb2wtc20tNSBjb2wteHMtNSBzaG9ydC1uYW1lIj4KICAgICAgICAgICAgICA8YSBocmVmPSIuLi8gaXBob25lLTExLWFraWxsaS10ZWxlZm9uLXNpeWFoLmh0bWwiPgogICAgICAgICAgICAgICAgPHNwYW4+IGlQaG9uZSAxMSA2NCBHQiBBS0lMTEkgVEVMRUZPTiBTxLBZQUggPC9zcGFuPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCBjb2wteHMtMyBzaG9ydC1wcmljZSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2R1Y3QtbGlzdF9fcHJpY2UiPjcuNTk5PC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9kdWN0LWxpc3RfX2N1cnJlbmN5Ij5UTDwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZhbmN5LW1vZGFsLWJvZHkgZmFuY3ktbW9kYWwtbGlzdCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgIDxoND5CVU5ETEUgw5xSw5xOTEVSPC9oND4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4KICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgIGlkPSJwb3B1cEJ1bmRsZUxpc3QiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im93bC1tb2RhbC1zbGlkZXItYnVuZGxlIG93bC1jYXJvdXNlbCBvd2wtdGhlbWUgb3dsLWxvYWRlZCBvd2wtZHJhZyIKICAgICAgICAgICAgICAgICAgICBkYXRhLXByb2R1Y3RsaW5laWQ9IjAiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvd2wtc3RhZ2Utb3V0ZXIiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ib3dsLXN0YWdlIgogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMjk1cHgsIDBweCwgMHB4KTsgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2UgMHM7IHdpZHRoOiAxMTgycHg7IgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im93bC1pdGVtIgogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjg5LjMzM3B4OyBtYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIiBpZD0iODkzMDgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9zdC1wb3B1bGFyLWZhbmN5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJtY2FmZWUtaW50ZXJuZXQtc2VjdXJpdHktMy1jaWhhei10dW0tcGxhdGZvcm1sYXIuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibW9zdC1wb3B1bGFyLXRhYmxlIGQtdGFibGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vY2RuLnZhdGFuYmlsZ2lzYXlhci5jb20vVXBsb2FkL1Byb2R1Y3QvbWNhZmVlL3RodW1iL1Rlb3JpVjItODkzMDgtMl9zbWFsbC5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1yZXNwb25zaXZlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdD0ibWNhZmVlLWludGVybmV0LXNlY3VyaXR5LTMtY2loYXotdHVtLXBsYXRmb3JtbGFyLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9Im1jYWZlZS1pbnRlcm5ldC1zZWN1cml0eS0zLWNpaGF6LXR1bS1wbGF0Zm9ybWxhci5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9waWN0dXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImktdGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5NY0FmZWUgSW50ZXJuZXQgU2VjdXJpdHkgMyBDaWhhei9Uw7xtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXRmb3JtbGFyPC9zcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9sZC1wcmljZSI+MjAwIFRMPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByaWNlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+MTU5IDxzcGFuPlRMPC9zcGFuPjwvc3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4gPC9hCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrPSJBZGRCdW5kbGVGcm9tUG9wVXAoODkzMDgsIDAsIDAsMTAzODg4LDE1OSwnTUlTMDA0TlIzUkFBJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+SEVNRU4gRUtMRTwvYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ib3dsLWl0ZW0gYWN0aXZlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjg5LjMzM3B4OyBtYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIiBpZD0iMTA0Mzc2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vc3QtcG9wdWxhci1mYW5jeSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iYXBwbGUtbXd2dTJ6bS1hLWlwaG9uZS0xMS1zaWxpa29uLWtpbGlmLXNpeWFoLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1vc3QtcG9wdWxhci10YWJsZSBkLXRhYmxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1jZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwaWN0dXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2Nkbi52YXRhbmJpbGdpc2F5YXIuY29tL1VwbG9hZC9Qcm9kdWN0L2FwcGxlL3RodW1iL1Rlb3JpVjItMTA0Mzc2X3NtYWxsLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PSJhcHBsZS1td3Z1MnptLWEtaXBob25lLTExLXNpbGlrb24ta2lsaWYtc2l5YWguaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iYXBwbGUtbXd2dTJ6bS1hLWlwaG9uZS0xMS1zaWxpa29uLWtpbGlmLXNpeWFoLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaS10aXRsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkFQUExFIE1XVlUyWk0vQSDEsFBIT05FIDExIFPEsEzEsEtPTiBLSUxJRiAtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFPEsFlBSDwvc3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZC1jZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvbGQtcHJpY2UiPjM5OSBUTDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjM1OSA8c3Bhbj5UTDwvc3Bhbj48L3NwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+IDwvYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0iQWRkQnVuZGxlRnJvbVBvcFVwKDEwNDM3NiwgMCwgMCwxMDM4ODgsMzU5LCdNV1ZVMlpNL0EnKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5IRU1FTiBFS0xFPC9hCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvd2wtaXRlbSBhY3RpdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyODkuMzMzcHg7IG1hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0iIGlkPSIxMDUzNDQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9zdC1wb3B1bGFyLWZhbmN5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJhZGRpc29uLWlwLTExcy1pcGhvbmUtMTEtdWx0cmEtc2xpbS10ZWxlZm9uLWtpbGlmaS1zaXlhaC5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtb3N0LXBvcHVsYXItdGFibGUgZC10YWJsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGljdHVyZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9jZG4udmF0YW5iaWxnaXNheWFyLmNvbS9VcGxvYWQvUHJvZHVjdC9hZGRpc29uL3RodW1iL1Rlb3JpVjItMTA1MzQ0X3NtYWxsLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PSJhZGRpc29uLWlwLTExcy1pcGhvbmUtMTEtdWx0cmEtc2xpbS10ZWxlZm9uLWtpbGlmaS1zaXlhaC5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJhZGRpc29uLWlwLTExcy1pcGhvbmUtMTEtdWx0cmEtc2xpbS10ZWxlZm9uLWtpbGlmaS1zaXlhaC5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9waWN0dXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImktdGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5BRETEsFNPTiBJUC0xMVMgxLBQSE9ORSAxMSBVTFRSQSBTTMSwTQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBURUxFRk9OIEtJTElGSS0gU8SwWUFIPC9zcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9sZC1wcmljZSI+ODIgVEw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID43MyA8c3Bhbj5UTDwvc3Bhbj48L3NwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+IDwvYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0iQWRkQnVuZGxlRnJvbVBvcFVwKDEwNTM0NCwgMCwgMCwxMDM4ODgsNzMsJ0lQLTExUyBTaXlhaCcpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkhFTUVOIEVLTEU8L2EKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im93bC1pdGVtIGFjdGl2ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDI4OS4zMzNweDsgbWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSIgaWQ9IjEwODA0OSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb3N0LXBvcHVsYXItZmFuY3kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9InR0ZWMtYWlyZ2xhc3MtZWRnZWNvbG9yLWlwaG9uZS0xMS1jYW0tZWtyYW4ta29ydXl1Y3UuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibW9zdC1wb3B1bGFyLXRhYmxlIGQtdGFibGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWNlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vY2RuLnZhdGFuYmlsZ2lzYXlhci5jb20vVXBsb2FkL1Byb2R1Y3QvdHRlYy90aHVtYi9UZW9yaVYyLTEwODA0OV9zbWFsbC5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1yZXNwb25zaXZlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdD0idHRlYy1haXJnbGFzcy1lZGdlY29sb3ItaXBob25lLTExLWNhbS1la3Jhbi1rb3J1eXVjdS5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJ0dGVjLWFpcmdsYXNzLWVkZ2Vjb2xvci1pcGhvbmUtMTEtY2FtLWVrcmFuLWtvcnV5dWN1Lmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BpY3R1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaS10aXRsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlRURUMgQUlSR0xBU1MgRURHRUNPTE9SIElQSE9ORSAxMSBDQU0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRUtSQU4gS09SVVlVQ1U8L3NwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImQtY2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2xkLXByaWNlIj4xNDkgVEw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4xMzQgPHNwYW4+VEw8L3NwYW4+PC9zcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPiA8L2EKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9IkFkZEJ1bmRsZUZyb21Qb3BVcCgxMDgwNDksIDAsIDAsMTAzODg4LDEzNCwnMkVDUjQ1JykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+SEVNRU4gRUtMRTwvYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvd2wtbmF2Ij4KICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICAgICAgICByb2xlPSJwcmVzZW50YXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvd2wtcHJldiIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuLWNhcm91c2VsLWNvbnRyb2xzIGljb24tYW5nbGUtbGVmdCIKICAgICAgICAgICAgICAgICAgICAgICAgPjwvc3Bhbj48L2J1dHRvbgogICAgICAgICAgICAgICAgICAgICAgPjxidXR0b24KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICAgICAgICByb2xlPSJwcmVzZW50YXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvd2wtbmV4dCBkaXNhYmxlZCIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuLWNhcm91c2VsLWNvbnRyb2xzIGljb24tYW5nbGUtcmlnaHQiCiAgICAgICAgICAgICAgICAgICAgICAgID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvd2wtZG90cyI+CiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHJvbGU9ImJ1dHRvbiIgY2xhc3M9Im93bC1kb3QiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+PC9idXR0b24KICAgICAgICAgICAgICAgICAgICAgID48YnV0dG9uIHJvbGU9ImJ1dHRvbiIgY2xhc3M9Im93bC1kb3QgYWN0aXZlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0iZmFuY3ktbW9kYWwtZm9vdGVyIGZhbmN5LW1vZGFsLWxpc3QiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgdGV4dC1yaWdodCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgdGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGNsYXNzPSJnby1iYWNrIj5BbMSxxZ92ZXJpxZ9lIEdlcmkgRMO2bjwvYT4KICAgICAgICAgICAgICAgICAgPGZvcm0KICAgICAgICAgICAgICAgICAgICBhY3Rpb249Ii9CYXNrZXQvVG9GaXJzdFN0ZXAiCiAgICAgICAgICAgICAgICAgICAgbWV0aG9kPSJwb3N0IgogICAgICAgICAgICAgICAgICAgIHJvbGU9ImZvcm0iCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9Il9fUmVxdWVzdFZlcmlmaWNhdGlvblRva2VuIgogICAgICAgICAgICAgICAgICAgICAgdHlwZT0iaGlkZGVuIgogICAgICAgICAgICAgICAgICAgICAgdmFsdWU9Ilp5b1lmWlZaaU5Udk11MDFVV0pHUWJnNDhva3BxX2NMeUtIRTlCbjJ6dkVlWWxpUnBDYmVTM1V5WmRCVjhPVjNoTVVzQnM3YjV0dFhENFRvYm1nTGlES1pyUjgxIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJoaWRkZW4iCiAgICAgICAgICAgICAgICAgICAgICBpZD0iY3VycmVudCIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImN1cnJlbnQiCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iMCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tZGFyay1ibHVlIGdvVG9CYXNrZXQiCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iU0VQRVRFIEfEsFQiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgIGRhdGEtZmFuY3lib3gtY2xvc2U9IiIKICAgICAgICAgICAgY2xhc3M9ImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1jbG9zZS1zbWFsbCIKICAgICAgICAgICAgdGl0bGU9IkNsb3NlIgogICAgICAgICAgPgogICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgIHZlcnNpb249IjEiCiAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDI0IDI0IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgIGQ9Ik0xMyAxMmw1LTUtMS0xLTUgNS01LTUtMSAxIDUgNS01IDUgMSAxIDUtNSA1IDUgMS0xeiIKICAgICAgICAgICAgICA+PC9wYXRoPgogICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZmFuY3lib3gtY2FwdGlvbiBmYW5jeWJveC1jYXB0aW9uLS1zZXBhcmF0ZSI+CiAgICAgIDxkaXYgY2xhc3M9ImZhbmN5Ym94LWNhcHRpb25fX2JvZHkiPjwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2Pgo="},null]}